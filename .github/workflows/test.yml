name: Build and Test
on:
  pull_request:
    paths-ignore:
      - '*.md'
      - 'website/*'
  push:
    branches:
      - main
    paths-ignore:
      - '*.md'
      - 'website/*'
permissions:
  contents: read
  pull-requests: read
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ["1.18.x"]
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: terraform fmt
        run: |
          make tflint
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.48.0
          go-version: ${{ matrix.go-version }}
          only-new-issues: true
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - {os: ubuntu-latest, go: 1.18}
          - {os: windows-latest, go: 1.18}
          - {os: macos-latest, go: 1.18}
    timeout-minutes: 10
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v1
      - name: Enable KVM group perms
        run: |
             echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
             sudo udevadm control --reload-rules
             sudo udevadm trigger --name-match=kvm
        if: runner.os == 'Linux'
      - name: Build
        run: |
          make
      - name: Setup libvirt (Linux)
        run: |
             sudo apt-get -y install qemu-kvm libvirt-daemon-system
             sudo adduser $USER libvirt
             sudo systemctl start libvirtd
        if: runner.os == 'Linux'
      - name: Test pre-requisites (Linux)
        run: sudo apt-get -y install xsltproc
        if: runner.os == 'Linux'
      - name: Test pre-requisites (MacOS)
        run: brew install libxslt
        if: runner.os == 'MacOS'
      - name: Test pre-requisites (Windows)
        run: choco install xsltproc
        if: runner.os == 'Windows'
      - name: Test
        run: |
          make test
      - uses: actions/upload-artifact@v2
        with:
          name: terraform-provider-libvirt-${{ matrix.os }}
          path: ${{ github.workspace }}/terraform-provider-libvirt*
